(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{433:function(t,s,n){"use strict";n.r(s);var a=n(56),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"nginx解决浏览器跨域问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx解决浏览器跨域问题"}},[t._v("#")]),t._v(" nginx解决浏览器跨域问题")]),t._v(" "),n("h2",{attrs:{id:"跨域问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#跨域问题"}},[t._v("#")]),t._v(" 跨域问题")]),t._v(" "),n("p",[t._v("浏览器出于安全方面的考虑，只允许与本域下的接口交互。不同源的客户端脚本在没有明确授权的情况下，不能读写对方的资源。\n例如访问www.test1.com 页面, 返回的文件中需要ajax向www.test2.com这个后台接口发起请求, 浏览器就会认为是跨域请求, 会向www.test2.com后台接口发起一个options的请求, 如果这个后台接口在响应报文中添加了如下几个响应头, 表示浏览器可以发起跨域请求\n如果没有浏览器会拒绝发起请求。")]),t._v(" "),n("h2",{attrs:{id:"解决方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解决方法"}},[t._v("#")]),t._v(" 解决方法")]),t._v(" "),n("p",[t._v("在后端接口url（www.test2.com）的nginx上添加如下配置")]),t._v(" "),n("div",{staticClass:"language-yml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-yml"}},[n("code",[t._v("server "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    add_header Access"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Allow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Origin "),n("span",{pre:!0,attrs:{class:"token important"}},[t._v("*;")]),t._v("\n    add_header Access"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Allow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Methods 'GET"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" POST"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" OPTIONS';\n    add_header Access"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Allow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Headers 'DNT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("X"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Mx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("ReqToken"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Keep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Alive"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("User"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Agent"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("X"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Requested"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("With"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("If"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Modified"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Since"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Cache"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Content"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("Authorization';\n\n    if ($request_method = 'OPTIONS') "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        return 204;\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br")])]),n("h2",{attrs:{id:"解释"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解释"}},[t._v("#")]),t._v(" 解释")]),t._v(" "),n("p",[t._v("Access-Control-Allow-Origin")]),t._v(" "),n("p",[t._v("服务器默认是不被允许跨域的。给Nginx服务器配置"),n("code",[t._v("Access-Control-Allow-Origin *")]),t._v("后，表示服务器可以接受所有的请求源（Origin）,即接受所有跨域的请求。 Access-Control-Allow-Headers 是为了防止出现以下错误：")]),t._v(" "),n("p",[t._v("Request header field Content-Type is not allowed by Access-Control-Allow-Headers in preflight response.")]),t._v(" "),n("p",[t._v('这个错误表示当前请求Content-Type的值不被支持。其实是我们发起了"application/json"的类型请求导致的。这里涉及到一个概念：预检请求（preflight request）,请看下面"预检请求"的介绍。')]),t._v(" "),n("p",[t._v("Access-Control-Allow-Methods 是为了防止出现以下错误：")]),t._v(" "),n("p",[t._v("Content-Type is not allowed by Access-Control-Allow-Headers in preflight response.")]),t._v(" "),n("p",[t._v("给OPTIONS 添加 204的返回，是为了处理在发送POST请求时Nginx依然拒绝访问的错误")]),t._v(" "),n("p",[t._v('发送"预检请求"时，需要用到方法 OPTIONS ,所以服务器需要允许该方法。')])])}),[],!1,null,null,null);s.default=e.exports}}]);